package co.blocke.scalajack
package json
package classes

import ScalaJack.*
import co.blocke.scala_reflection.*
import org.scalatest.funspec.AnyFunSpec
import org.scalatest.matchers.should.Matchers.*
import org.scalatest.*
import scala.util.*
import TestUtil.*

import java.util.UUID

class TraitSpec() extends AnyFunSpec with JsonMatchers:
  opaque type phone = String

  describe(colorString("-------------------------------\n:         Trait Tests         :\n-------------------------------", Console.YELLOW)) {
    describe(colorString("+++ Positive Tests +++")) {
      it("Sealed trait with case objects and case classes must work") {
        val inst = TraitHolder(Start, Fish("Beta", false), Miami(101.1))
        val js = sj[TraitHolder].toJson(inst)
        js should matchJson("""{"a":"Start","b":{"_hint":"Fish","species":"Beta","freshwater":false},"c":{"_hint":"Miami","temp":101.1}}""")
      }
      it("Sealed trait with modified type hint label must work") {
        val inst = TraitHolder(Start, Fish("Beta", false), Miami(101.1))
        val js = sj[TraitHolder](JsonConfig.withTypeHintLabel("ref")).toJson(inst)
        js should matchJson("""{"a":"Start","b":{"ref":"Fish","species":"Beta","freshwater":false},"c":{"ref":"Miami","temp":101.1}}""")
      }
      it("Sealed trait with type hint policy SCRAMBLE_CLASSNAME label must work") {
        val inst = TraitHolder(Start, Fish("Beta", false), Miami(101.1))
        val js = sj[TraitHolder](JsonConfig.withTypeHintPolicy(TypeHintPolicy.SCRAMBLE_CLASSNAME)).toJson(inst)
        val diff = parseJValue(js).diff(parseJValue("""{"a":"Start","b":{"_hint":"82949-049-49A","species":"Beta","freshwater":false},"c":{"_hint":"53150-867-73B","temp":101.1}}"""))
        val diffMap = diff.changed.values.asInstanceOf[Map[String, Map[String, _]]]
        assert(diffMap("b").contains("_hint") && diffMap("c").contains("_hint") == true)
      }
      it("Sealed trait with type hint policy USE_ANNOTATION label must work") {
        val inst = TraitHolder(Start, Fish("Beta", false), Miami(101.1))
        val js = sj[TraitHolder](JsonConfig.withTypeHintPolicy(TypeHintPolicy.USE_ANNOTATION)).toJson(inst)
        js should matchJson("""{"a":"Start","b":{"_hint":"flipper","species":"Beta","freshwater":false},"c":{"_hint":"vice","temp":101.1}}""")
      }

      it("Sealed trait with class children implemented by case classes (in separate compilation unit)") {
        (pending)
      }
    }
  }
